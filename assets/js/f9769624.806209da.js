"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8308],{1184:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>r});var n=s(4041);const a={},o=n.createContext(a);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(o.Provider,{value:t},e.children)}},1737:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"snapshotviews","title":"Snapshot Views","description":"Creating Snapshots of Views","source":"@site/docs/snapshot-views.md","sourceDirName":".","slug":"/snapshotviews","permalink":"/react-native-skia/docs/snapshotviews","draft":false,"unlisted":false,"editUrl":"https://github.com/shopify/react-native-skia/edit/main/docs/docs/snapshot-views.md","tags":[],"version":"current","frontMatter":{"id":"snapshotviews","title":"Snapshot Views","sidebar_label":"Snapshot Views","slug":"/snapshotviews"},"sidebar":"tutorialSidebar","previous":{"title":"SVG","permalink":"/react-native-skia/docs/images-svg"},"next":{"title":"Video","permalink":"/react-native-skia/docs/video"}}');var a=s(1085),o=s(1184);const i={id:"snapshotviews",title:"Snapshot Views",sidebar_label:"Snapshot Views",slug:"/snapshotviews"},r=void 0,c={},l=[{value:"Creating Snapshots of Views",id:"creating-snapshots-of-views",level:2}];function h(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h2,{id:"creating-snapshots-of-views",children:"Creating Snapshots of Views"}),"\n",(0,a.jsxs)(t.p,{children:["The function ",(0,a.jsx)(t.code,{children:"makeImageFromView"})," lets you take a snapshot of another React Native View as a Skia SkImage. The function accepts a ref to a native view and returns a promise that resolves to an ",(0,a.jsx)(t.code,{children:"SkImage"})," instance upon success."]}),"\n",(0,a.jsxs)(t.admonition,{type:"info",children:[(0,a.jsxs)(t.p,{children:["It is safer to use ",(0,a.jsx)(t.code,{children:"collapsable=false"})," on the root view of the snapshot to prevent the root view from being removed by React Native.\nIf the view is optimized away, ",(0,a.jsx)(t.code,{children:"makeImageFromView"})," will crash or return the wrong result."]}),(0,a.jsx)(t.admonition,{type:"info",children:(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-tsx",children:'import { useState, useRef } from "react";\nimport { View, Text, PixelRatio, StyleSheet, Pressable } from "react-native";\nimport type { SkImage } from "@shopify/react-native-skia";\nimport { makeImageFromView, Canvas, Image } from "@shopify/react-native-skia";\n\nconst pd = PixelRatio.get();\n\nconst Demo = () => {\n  // Create a ref for the view you\'d like to take a snapshot of\n  const ref = useRef<View>(null);\n  // Create a state variable to store the snapshot\n  const [image, setImage] = useState<SkImage | null>(null);\n  // Create a function to take the snapshot\n  const onPress = async () => {\n    // Take the snapshot of the view\n    const snapshot = await makeImageFromView(ref);\n    setImage(snapshot);\n  };\n  return (\n    <View style={{ flex: 1 }}>\n      <Pressable onPress={onPress}>\n        <View\n          ref={ref}\n          // collapsable={false} is important here\n          collapsable={false}\n          style={{ backgroundColor: "cyan", flex: 1 }}>\n          <Text>This is a React Native View</Text>\n        </View>\n      </Pressable>\n      {\n        image && (\n          <Canvas style={StyleSheet.absoluteFill}>\n            <Image\n              image={image}\n              x={0}\n              y={0}\n              width={image.width() / pd}\n              height={image.height() / pd}\n            />\n          </Canvas>\n        )\n      }\n    </View>\n  )\n};\n'})})})]})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(h,{...e})}):h(e)}}}]);