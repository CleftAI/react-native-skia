"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5280],{1184:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>r});var i=s(4041);const t={},a=i.createContext(t);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(a.Provider,{value:n},e.children)}},3764:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"video","title":"Video","description":"React Native Skia provides a way to load video frames as images, enabling rich multimedia experiences within your applications.","source":"@site/docs/video.md","sourceDirName":".","slug":"/video","permalink":"/react-native-skia/docs/video","draft":false,"unlisted":false,"editUrl":"https://github.com/shopify/react-native-skia/edit/main/docs/docs/video.md","tags":[],"version":"current","frontMatter":{"id":"video","title":"Video","sidebar_label":"Video","slug":"/video"},"sidebar":"tutorialSidebar","previous":{"title":"Snapshot Views","permalink":"/react-native-skia/docs/snapshotviews"},"next":{"title":"Paragraph","permalink":"/react-native-skia/docs/text/paragraph"}}');var t=s(1085),a=s(1184);const o={id:"video",title:"Video",sidebar_label:"Video",slug:"/video"},r=void 0,d={},l=[{value:"Requirements",id:"requirements",level:3},{value:"Example",id:"example",level:2},{value:"Returned Values",id:"returned-values",level:2},{value:"Playback Options",id:"playback-options",level:2},{value:"Rotated Video",id:"rotated-video",level:2},{value:"Using Assets",id:"using-assets",level:2},{value:"Video Encoding",id:"video-encoding",level:2}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["React Native Skia provides a way to load video frames as images, enabling rich multimedia experiences within your applications.\nA video frame can be used anywhere a Skia image is accepted: ",(0,t.jsx)(n.code,{children:"Image"}),", ",(0,t.jsx)(n.code,{children:"ImageShader"}),", and ",(0,t.jsx)(n.code,{children:"Atlas"}),".\nVideos are also supported on Web."]}),"\n",(0,t.jsx)(n.h3,{id:"requirements",children:"Requirements"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Reanimated"})," version 3 or higher."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.p,{children:"Here is an example of how to use the video support in React Native Skia. This example demonstrates how to load and display video frames within a canvas, applying a color matrix for visual effects. Tapping the screen will pause and play the video."}),"\n",(0,t.jsxs)(n.p,{children:["The video can be a remote (",(0,t.jsx)(n.code,{children:"http://..."}),") or local URL (",(0,t.jsx)(n.code,{children:"file://"}),"), as well as a ",(0,t.jsx)(n.a,{href:"#using-assets",children:"video from the bundle"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import React from "react";\nimport {\n  Canvas,\n  ColorMatrix,\n  Fill,\n  ImageShader,\n  useVideo\n} from "@shopify/react-native-skia";\nimport { Pressable, useWindowDimensions } from "react-native";\nimport { useSharedValue } from "react-native-reanimated";\n\nexport const VideoExample = () => {\n  const paused = useSharedValue(false);\n  const { width, height } = useWindowDimensions();\n  const { currentFrame } = useVideo(\n    "https://bit.ly/skia-video",\n    {\n      paused,\n    }\n  );\n  return (\n    <Pressable\n      style={{ flex: 1 }}\n      onPress={() => (paused.value = !paused.value)}\n    >\n      <Canvas style={{ flex: 1 }}>\n        <Fill>\n          <ImageShader\n            image={currentFrame}\n            x={0}\n            y={0}\n            width={width}\n            height={height}\n            fit="cover"\n          />\n          <ColorMatrix\n            matrix={[\n              0.95, 0, 0, 0, 0.05, 0.65, 0, 0, 0, 0.15, 0.15, 0, 0, 0, 0.5, 0,\n              0, 0, 1, 0,\n            ]}\n          />\n        </Fill>\n      </Canvas>\n    </Pressable>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"returned-values",children:"Returned Values"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"useVideo"})," hook returns ",(0,t.jsx)(n.code,{children:"currentFrame"}),", which contains the current video frame, as well as ",(0,t.jsx)(n.code,{children:"currentTime"}),", ",(0,t.jsx)(n.code,{children:"rotation"}),", and ",(0,t.jsx)(n.code,{children:"size"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"playback-options",children:"Playback Options"}),"\n",(0,t.jsxs)(n.p,{children:["The following table describes the playback options available for the ",(0,t.jsx)(n.code,{children:"useVideo"})," hook:"]}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Option"}),(0,t.jsx)(n.th,{children:"Description"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"seek"})}),(0,t.jsxs)(n.td,{children:["Allows seeking to a specific point in the video in milliseconds. Default is ",(0,t.jsx)(n.code,{children:"null"}),"."]})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"paused"})}),(0,t.jsx)(n.td,{children:"Indicates whether the video is paused."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"looping"})}),(0,t.jsx)(n.td,{children:"Indicates whether the video should loop."})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.code,{children:"volume"})}),(0,t.jsx)(n.td,{children:"A value from 0 to 1 representing the volume level (0 is muted, 1 is the maximum volume)."})]})]})]}),"\n",(0,t.jsx)(n.p,{children:"In the example below, every time we tap on the video, we set the video seek at 2 seconds."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import React from "react";\nimport {\n  Canvas,\n  Fill,\n  Image,\n  useVideo\n} from "@shopify/react-native-skia";\nimport { Pressable, useWindowDimensions } from "react-native";\nimport { useSharedValue } from "react-native-reanimated";\n\nexport const VideoExample = () => {\n  const seek = useSharedValue<null | number>(null);\n  // Set this value to true to pause the video\n  const paused = useSharedValue(false);\n  const { width, height } = useWindowDimensions();\n  const {currentFrame, currentTime} = useVideo(\n    "https://bit.ly/skia-video",\n    {\n      seek,\n      paused,\n      looping: true\n    }\n  );\n  return (\n    <Pressable\n      style={{ flex: 1 }}\n      onPress={() => (seek.value = 2000)}\n    >\n      <Canvas style={{ flex: 1 }}>\n        <Image\n          image={currentFrame}\n          x={0}\n          y={0}\n          width={width}\n          height={height}\n          fit="cover"\n        />\n      </Canvas>\n    </Pressable>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"rotated-video",children:"Rotated Video"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"rotation"})," property can be ",(0,t.jsx)(n.code,{children:"0"}),", ",(0,t.jsx)(n.code,{children:"90"}),", ",(0,t.jsx)(n.code,{children:"180"}),", or ",(0,t.jsx)(n.code,{children:"270"}),". We provide a ",(0,t.jsx)(n.code,{children:"fitbox"})," function that can help with rotating and scaling the video."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import React from "react";\nimport {\n  Canvas,\n  Image,\n  useVideo,\n  fitbox,\n  rect\n} from "@shopify/react-native-skia";\nimport { Pressable, useWindowDimensions } from "react-native";\nimport { useSharedValue } from "react-native-reanimated";\n\nexport const VideoExample = () => {\n  const paused = useSharedValue(false);\n  const { width, height } = useWindowDimensions();\n  const { currentFrame, rotation, size } = useVideo("https://bit.ly/skia-video");\n  const src = rect(0, 0, size.width, size.height);\n  const dst = rect(0, 0, width, height)\n  const transform = fitbox("cover", src, dst, rotation);\n  return (\n    <Canvas style={{ flex: 1 }}>\n      <Image\n        image={currentFrame}\n        x={0}\n        y={0}\n        width={width}\n        height={height}\n        fit="none"\n        transform={transform}\n      />\n    </Canvas>\n  );\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"using-assets",children:"Using Assets"}),"\n",(0,t.jsxs)(n.p,{children:["Below is an example where we use ",(0,t.jsx)(n.a,{href:"https://docs.expo.dev/versions/latest/sdk/asset/",children:"expo-asset"})," to load a video file from the bundle."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-tsx",metastring:"twoslash",children:'import { useVideo } from "@shopify/react-native-skia";\nimport { useAssets } from "expo-asset";\n\n// Example usage:\n// const video = useVideoFromAsset(require("./BigBuckBunny.mp4"));\nexport const useVideoFromAsset = (\n  mod: number,\n  options?: Parameters<typeof useVideo>[1]\n) => {\n  const [assets, error] = useAssets([mod]);\n  if (error) {\n    throw error;\n  }\n  return useVideo(assets ? assets[0].localUri : null, options);\n};\n'})}),"\n",(0,t.jsx)(n.h2,{id:"video-encoding",children:"Video Encoding"}),"\n",(0,t.jsxs)(n.p,{children:["To encode videos from Skia images, you can use ffmpeg or also look into ",(0,t.jsx)(n.a,{href:"https://github.com/AzzappApp/react-native-skia-video",children:"react-native-skia-video"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}}}]);